Python 3.9.2 (tags/v3.9.2:1a79785, Feb 19 2021, 13:44:55) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> i = 10
>>> print(i)
10
>>> type(i)
<class 'int'>
>>> i = "WELCOME"
>>> print(i)
WELCOME
>>> type(i)
<class 'str'>
>>> # Hash is to specify comments
>>> # Strings
>>> # Strings can be specified either by double quotes or single quotes
>>> s = "WELCOME"
>>> print(s)
WELCOME
>>> j = 'Python Programming'
>>> print(s)
WELCOME
>>> len(s)
7
>>> # Indexing - Subscript Operator
>>> # [ ]
>>> print(s)
WELCOME
>>> # Index always starts from zero (0) to length of string - 1
>>> s[0]
'W'
>>> s[3]
'C'
>>> s[6]
'E'
>>> s[7]
Traceback (most recent call last):
  File "<pyshell#21>", line 1, in <module>
    s[7]
IndexError: string index out of range
>>> # Positive Indexing
>>> # 0 - 6
>>> # Negative Indexing
>>> 
>>> 
>>> s[-7]
'W'
>>> s[-1]
'E'
>>> s[-6]
'E'
>>> s[2]
'L'
>>> s[6]
'E'
>>> s[2,6]
Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    s[2,6]
TypeError: string indices must be integers
>>> 
>>> # Slicing
>>> # Slicing always works from left to right
>>> s[0:3]
'WEL'
>>> # s[startPos : endPos] , startPos is included, endPos is excluded
>>> s[0:3]
'WEL'
>>> s[3:6]
'COM'
>>> s[7]
Traceback (most recent call last):
  File "<pyshell#40>", line 1, in <module>
    s[7]
IndexError: string index out of range
>>> s[3:7]
'COME'
>>> s[3:10]
'COME'
>>> s[3:]
'COME'
>>> s[:3]
'WEL'
>>> s[:]
'WELCOME'
>>> s[-7:-4]
'WEL'
>>> s[-4:-1]
'COM'
>>> s[-4:]
'COME'
>>> s[-7:3]
'WEL'
>>> s[3:-1]
'COM'
>>> s[-1:3]
''
>>> msg = "Welcome to Python Programming Class"
>>> # Use slicing to print Class
>>> msg[-5]
'C'
>>> msg[-5:]
'Class'
>>> len(msg)
35
>>> msg[30]
'C'
>>> msg[30:]
'Class'
>>> msg[-5:len(msg)]
'Class'
>>> 
>>> folder = "C:\newfolder"
>>> print(folder)
C:
ewfolder
>>> folder = "C:\\newfolder"
>>> print(folder)
C:\newfolder
>>> folder = r"C:\newfolder"
>>> print(folder)
C:\newfolder
>>> # r is RAW String
>>> # Treat the string as it is. Don't escape any characters
>>> folder = "C:\newfolder"
>>> print(folder)
C:
ewfolder
>>> folder
'C:\newfolder'
>>> 
>>> 
>>> 18 * 4
72
>>> 18 + 4
22
>>> 18 - 4
14
>>> 18 / 4
4.5
>>> 18 // 4
4
>>> 18 % 4
2
>>> # 18 / 4 would give 4 in Python 2.7
>>> # 18 / 4 would give 4.5. in Python 3.+
>>> 72 // 5
14
>>> s
'WELCOME'
>>> s + 10
Traceback (most recent call last):
  File "<pyshell#84>", line 1, in <module>
    s + 10
TypeError: can only concatenate str (not "int") to str
>>> s + "10"
'WELCOME10'
>>> s
'WELCOME'
>>> a = s + "10"
>>> a
'WELCOME10'
>>> 
>>> s
'WELCOME'
>>> s + " 10"
'WELCOME 10'
>>> s * 3
'WELCOMEWELCOMEWELCOME'
>>> # * operator has dual role
>>> # either it will act as multiplication operator or repetition operator
>>> 8 * 3
24
>>> "Hello" * 3
'HelloHelloHello'
>>> 